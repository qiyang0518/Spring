Spring框架概述:
    1、Spring是轻量级的开源的JavaEE框架
    2、Spring可以解决企业应用开发的复杂性
    3、Spring有两个核心部分:IOC和AOP
        IOC:控制反转,把创建对象规程交给Spring进行管理
        AOP:面向切面,不修改源代码进行功能增强
    4、特点
        a、方便解耦、简化开发
        b、Aop编程的支持
        c、方便程序测试
        d、方便和其他框架进行整合
        e、方便进行事务操作
        f、降低API开发难度
    5、选取Spring5

入门案例:
    maven导入jar
    maven导入依赖包实例:
        spring核心包的引入，可以直接使用spring-context的artifactId。示例如下:
            <dependency>
              <groupId>org.springframework</groupId>
              <artifactId>spring-context</artifactId>
              <version>${version.spring}</version>
            </dependency>

Spring创建对象(配置文件创建对象)
    创建xml配置文件在其添加对象        <bean id = "user" class="com.spring5.User"></bean>
    在测试类中创建配置文件设置的对象:   User user = context.getBean("user",User.class);         //根据id值(小写),获取对象,并转换问User类


IOC底层原理:
    概念:控制反转,降低代码之间的耦合度,把对象的创建和对象之间的调用,交给spring管理
    目的:使用IOC降低代码间的耦合度
    底层原理:
    技术:xml解析、工厂模式、反射
        工厂模式:
            创建工厂类,获取对象类的方法(返回值为对象)
         xml解析:获取配置文件内容
    IOC过程:
        第一步:xml配置文件,配置创建的对象
        第二步:service类、dao类,创建工厂类
                xml解析获取对象
              通过反射创建对象
              Class clazz = Class.forName(classValue)
              (User)clazz.newInstance();
IOC接口:

IOC操作Bean管理(基于XML)
基于XML创建对象
<bean id = "user" class="com.spring5.User"></bean>
id:标签名,要求小写         class:类路径(java后的路径名称+类名)
1、在spring配置文件中,使用bean标签,标签里面添加对应属性,就可以实现对象创建
2、bean标签中常用属性
    id属性:给对象取一个标识
    class属性:类的全路径(包类路径)
    name属性:跟id作用一致(可以加特殊字符)
3、创建对象时,默认执行无参构造方法完成对象的创建

IOC操作Bean管理(基于注解)
1、DI:依赖注入(注入属性)
    使用set方法注入(bean、property)
    有参构造注入(创建类,定义属性)
    P名称空间注入
     a、使用p名称空间注入,可以简化基于xml配置            //xmlns:p="http://www.springframework.org/schema/p"
        步骤: 在配置文件(bean.xml)中添加p名称空间
              在bean标签里,进行属性的注入(前提是在类声明时添加属性设置方法setter)             //<bean id="book" class="org.example.Demo" p:sName="小明" p:age="20">
2、字面量
    a、null
    <property name="address">
    <null/>
    </property>
    b、属性值包含特殊字符
    1、把<>进行转义&lt,&gt
    2、把特殊符号内容写到CDTA
    <property name="address">
    <value><![CDATA[<<南京>>]]></value>
    <property>
3、
    注入属性-外部bean
        1、创建两个类service类和dao类(在配置文件(bean.xml)中,)
        2、在service调用dao里面的的方法
        3、在spring的配置文件中,创建两个类的对象
    注入属性-级联赋值
        1、一对多关系,部门员工
        2、在实体类中实现一对多
        3、在spring配置文件中进行配置(bean的嵌套)

4、xml注入集合属性
    1、注入数组

    2、注入List

    3、注入map


IOC思想基于IOC容器完成,IOC容器底层就是对象工厂
Spring提供IOC容器实现两种方式(两个接口)
1、BeanFactory:IOC容器基本实现:是Spring内部的使用接口,不提供开发人员使用
特点:加载配置文件时,在获取对象时或使用对象时才创建对象
2、ApplicationContext:BeanFactory接口的子接口,提供更强大的功能一般由开发人员使用
特点:加载配置文件时就创建对象(通常使用)
ApplicationContext接口实现类

IOC具体操作
Bean管理(两个操作)
a、由Spring创建对象
b、Spring注入属性




